@model ForDoListApp.Models.TasksViewModel
@using Models.Entity.Enums

@{
    ViewData["Title"] = "Edit Task";
}

<div class="container mt-5">
    <h1 class="mb-4">‚úèÔ∏è Edit Task</h1>

    <!-- Error Message -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Edit Form -->
    <div class="card card-body shadow-sm mb-4">
        <form asp-action="Edit" asp-controller="Home" method="post">
            @Html.AntiForgeryToken()
            <input asp-for="NewTask.TaskId" type="hidden" />
            <div asp-validation-summary="All" class="text-danger mb-3"></div>

            <div class="mb-3">
                <label asp-for="NewTask.TaskTitle" class="form-label">Title</label>
                <input asp-for="NewTask.TaskTitle" class="form-control" maxlength="100" required />
                <span asp-validation-for="NewTask.TaskTitle" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="NewTask.TaskDescription" class="form-label">Description</label>
                <textarea asp-for="NewTask.TaskDescription" class="form-control"></textarea>
                <span asp-validation-for="NewTask.TaskDescription" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="NewTask.DueDate" class="form-label">Due Date</label>
                <input asp-for="NewTask.DueDate" type="date" class="form-control" value="@(Model.NewTask.DueDate?.ToString("yyyy-MM-dd"))" />
                <span asp-validation-for="NewTask.DueDate" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="NewTask.Priority" class="form-label">Priority</label>
                    <select asp-for="NewTask.Priority" class="form-select">
                        <option value="">Select Priority</option>
                        @foreach (Models.Entity.Enums.TaskPriorityEnum priority in Enum.GetValues(typeof(Models.Entity.Enums.TaskPriorityEnum)))
                        {
                            <option value="@priority">@priority</option>
                        }
                    </select>
                    <span asp-validation-for="NewTask.Priority" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="NewTask.Category" class="form-label">Category</label>
                    <select asp-for="NewTask.Category" class="form-select">
                        <option value="">Select Category</option>
                        @foreach (Models.Entity.Enums.TaskCategoryEnum category in Enum.GetValues(typeof(Models.Entity.Enums.TaskCategoryEnum)))
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                    <span asp-validation-for="NewTask.Category" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="NewTask.Status" class="form-label">Status</label>
                <select asp-for="NewTask.Status" class="form-select">
                    <option value="">Select Status</option>
                    @foreach (Models.Entity.Enums.TaskStatusEnum status in Enum.GetValues(typeof(Models.Entity.Enums.TaskStatusEnum)))
                    {
                        <option value="@status">@status</option>
                    }
                </select>
                <span asp-validation-for="NewTask.Status" class="text-danger"></span>
            </div>

            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-primary">Update Task</button>
                <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>

    <!-- Task List -->
    <h3 class="mb-3">üìã Your Tasks</h3>
    @if (!Model.Tasks.Any())
    {
        <div class="alert alert-info">You don't have any tasks yet.</div>
    }
    else
    {
        <div class="list-group shadow-sm">
            @foreach (var task in Model.Tasks)
            {
                <div class="list-group-item d-flex justify-content-between align-items-start @(task.DueDate < DateTime.Today && task.Status != TaskStatusEnum.COMPLETED ? "border-danger" : "")">
                    <div class="w-100">
                        <h5 class="mb-1">@task.TaskTitle</h5>
                        <p class="mb-1">@task.TaskDescription</p>
                        <div class="small text-muted">
                            Due: @(task.DueDate?.ToString("yyyy-MM-dd") ?? "No due date")<br />
                            Category: <span class="badge bg-secondary">@task.Category</span>
                            Status: <span class="badge bg-info">@task.Status</span>
                            Priority: <span class="badge 
                                @(task.Priority == TaskPriorityEnum.HIGH ? "bg-danger" : 
                                  task.Priority == TaskPriorityEnum.MEDIUM ? "bg-warning text-dark" : "bg-success")">
                                @task.Priority
                            </span>
                            <br />
                            Created: @task.CreatedAt.ToString("yyyy-MM-dd HH:mm")<br />
                            Updated: @task.UpdatedAt.ToString("yyyy-MM-dd HH:mm")
                        </div>
                    </div>

                    <div class="ms-3 d-flex flex-column gap-1">
                        <a asp-action="Edit" asp-controller="Home" asp-route-id="@task.TaskId" class="btn btn-sm btn-outline-primary">Edit</a>
                        <form asp-action="Delete" asp-controller="Home" asp-route-id="@task.TaskId" method="post" onsubmit="return confirm('Are you sure you want to delete this task?');">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
}