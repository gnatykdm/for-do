@model ForDoListApp.Models.TasksViewModel
@using Models.Entity.Enums

@{
    ViewData["Title"] = "Your Tasks";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">üìù Your Tasks</h1>
        <button class="btn btn-success" type="button" data-bs-toggle="collapse" data-bs-target="#createTaskForm" aria-expanded="false" aria-controls="createTaskForm">
            + @(Model.NewTask.TaskId == 0 ? "Add New Task" : "Edit Task")
        </button>
    </div>

    <!-- Filter and Sort Controls -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-4">
                    <label class="form-label">Filter by Status</label>
                    <select name="filterStatus" class="form-select" onchange="this.form.submit()">
                        <option value="">All Statuses</option>
                        @foreach (var status in Enum.GetValues(typeof(TaskStatusEnum)))
                        {
                            <option value="@status" selected="@(status.ToString() == Model.FilterStatus)">@status</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label">Sort By</label>
                    <select name="sortBy" class="form-select" onchange="this.form.submit()">
                        <option value="DueDate" selected="@(Model.SortBy == "DueDate")">Due Date</option>
                        <option value="Priority" selected="@(Model.SortBy == "Priority")">Priority</option>
                        <option value="Category" selected="@(Model.SortBy == "Category")">Category</option>
                    </select>
                </div>
            </form>
        </div>
    </div>

    <!-- Task Form -->
    <div class="collapse mb-4" id="createTaskForm">
        <div class="card card-body shadow-sm">
            <form asp-action="Create" asp-controller="Home" method="post" id="createTaskForm">
                @Html.AntiForgeryToken()
                <input type="hidden" name="NewTask.TaskId" value="0" /> <!-- Force TaskId to 0 -->
                <div asp-validation-summary="All" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="NewTask.TaskTitle" class="form-label">Title</label>
                    <input asp-for="NewTask.TaskTitle" class="form-control" maxlength="100" required />
                    <span asp-validation-for="NewTask.TaskTitle" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="NewTask.TaskDescription" class="form-label">Description</label>
                    <textarea asp-for="NewTask.TaskDescription" class="form-control"></textarea>
                    <span asp-validation-for="NewTask.TaskDescription" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="NewTask.DueDate" class="form-label">Due Date</label>
                    <input asp-for="NewTask.DueDate" type="date" class="form-control" />
                    <span asp-validation-for="NewTask.DueDate" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="NewTask.Priority" class="form-label">Priority</label>
                        <select asp-for="NewTask.Priority" class="form-select">
                            @foreach (var priority in Enum.GetValues(typeof(TaskPriorityEnum)))
                            {
                                <option value="@priority">@priority</option>
                            }
                        </select>
                        <span asp-validation-for="NewTask.Priority" class="text-danger"></span>
                    </div>

                    <div class="col-md-6 mb-3">
                        <label asp-for="NewTask.Category" class="form-label">Category</label>
                        <select asp-for="NewTask.Category" class="form-select">
                            @foreach (var category in Enum.GetValues(typeof(TaskCategoryEnum)))
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                        <span asp-validation-for="NewTask.Category" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="NewTask.Status" class="form-label">Status</label>
                    <select asp-for="NewTask.Status" class="form-select">
                        @foreach (var status in Enum.GetValues(typeof(TaskStatusEnum)))
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                    <span asp-validation-for="NewTask.Status" class="text-danger"></span>
                </div>

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary">Create Task</button>
                </div>
            </form>
        </div>
    </div>
    <hr />

    <h3 class="mb-3">üìã Task List</h3>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    @if (!Model.Tasks.Any())
    {
        <div class="alert alert-info">You don't have any tasks yet. Add one above!</div>
    }
    else
    {
        <div class="list-group shadow-sm">
            @foreach (var task in Model.Tasks)
            {
                <div class="list-group-item d-flex justify-content-between align-items-start @(task.DueDate < DateTime.Today && task.Status != TaskStatusEnum.COMPLETED ? "border-danger" : "")">
                    <div class="w-100">
                        <h5 class="mb-1">@task.TaskTitle</h5>
                        <p class="mb-1">@task.TaskDescription</p>
                        <div class="small text-muted">
                            Due: @(task.DueDate?.ToString("yyyy-MM-dd") ?? "No due date")<br />
                            Category: <span class="badge bg-secondary">@task.Category</span>
                            Status: <span class="badge bg-info">@task.Status</span>
                            Priority: <span class="badge 
                                @(task.Priority == TaskPriorityEnum.HIGH ? "bg-danger" : 
                                  task.Priority == TaskPriorityEnum.MEDIUM ? "bg-warning text-dark" : "bg-success")">
                                @task.Priority
                            </span>
                            <br />
                            Created: @task.CreatedAt.ToString("yyyy-MM-dd HH:mm")<br />
                            Updated: @task.UpdatedAt.ToString("yyyy-MM-dd HH:mm")
                        </div>
                    </div>

                    <div class="ms-3 d-flex flex-column gap-1">
                        <a asp-action="Edit" asp-route-id="@task.TaskId" class="btn btn-sm btn-outline-primary">Edit</a>
                        <form asp-action="Delete" asp-route-id="@task.TaskId" method="post" onsubmit="return confirm('Are you sure you want to delete this task?');">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
}